// Code generated by MockGen. DO NOT EDIT.
// Source: repo/urlrepo/crud.go

// Package mock_urlrepo is a generated GoMock package.
package mock_urlrepo

import (
	reflect "reflect"
	urlmodel "urlshortener/models/urlmodel"

	gomock "github.com/golang/mock/gomock"
)

// MockCRUDRepositoryInterface is a mock of CRUDRepositoryInterface interface.
type MockCRUDRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCRUDRepositoryInterfaceMockRecorder
}

// MockCRUDRepositoryInterfaceMockRecorder is the mock recorder for MockCRUDRepositoryInterface.
type MockCRUDRepositoryInterfaceMockRecorder struct {
	mock *MockCRUDRepositoryInterface
}

// NewMockCRUDRepositoryInterface creates a new mock instance.
func NewMockCRUDRepositoryInterface(ctrl *gomock.Controller) *MockCRUDRepositoryInterface {
	mock := &MockCRUDRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockCRUDRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCRUDRepositoryInterface) EXPECT() *MockCRUDRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetURL mocks base method.
func (m *MockCRUDRepositoryInterface) GetURL(model urlmodel.URL) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURL", model)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURL indicates an expected call of GetURL.
func (mr *MockCRUDRepositoryInterfaceMockRecorder) GetURL(model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*MockCRUDRepositoryInterface)(nil).GetURL), model)
}

// StoreURL mocks base method.
func (m *MockCRUDRepositoryInterface) StoreURL(model urlmodel.URL) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreURL", model)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreURL indicates an expected call of StoreURL.
func (mr *MockCRUDRepositoryInterfaceMockRecorder) StoreURL(model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreURL", reflect.TypeOf((*MockCRUDRepositoryInterface)(nil).StoreURL), model)
}
